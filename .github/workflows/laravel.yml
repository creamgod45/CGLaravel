name: Laravel

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest
    env:
      DB_DATABASE: laravel
      DB_USERNAME: root
      DB_PASSWORD: password
      DB_PORT: 3306
      APP_ENV: testing

    services:
      apache:
        image: httpd:2.4
        ports:
          - 80:80 # Â∞áÂÆπÂô®ÂÖßÈÉ®ÁöÑ 80 Á´ØÂè£Êò†Â∞ÑÂà∞‰∏ªÊ©üÁöÑ 8080 Á´ØÂè£
        options: >-
          --health-cmd="curl --fail http://localhost:80 || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: "laravel"
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Configure Apache
        run: |
          echo "<VirtualHost *:80>
          DocumentRoot /home/runner/work/creamgod45/CGLaravel
          <Directory /home/runner/work/creamgod45/CGLaravel>
              Options Indexes FollowSymLinks
              AllowOverride All
              Require all granted
          </Directory>
          </VirtualHost>" > /usr/local/apache2/conf/httpd.conf
      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: '8.2'

      - uses: actions/checkout@v4


      - name: Start Mariadb
        run: |
          mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -uroot -ppassword -e 'CREATE DATABASE IF NOT EXISTS laravel;'

      - name: Verify MySQL connection
        run: |
          mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -uroot -ppassword -e "SHOW DATABASES"


      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --optimize-autoloader

      - name: Run Migrations üíæ
        run: php artisan migrate --force -v

      - name: artisan optimize clear
        run: php artisan optimize:clear

      - name: Generate key
        run: php artisan key:generate

      - name: autoload
        run: composer dump-autoload

      - name: artisan optimize
        run: php artisan optimize

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Run NPM installer
        run: npm install

      - name: build Vite Assets
        run: npm run build

      - name: Test with phpunit üßê
        run: |
          php artisan test --profile
          cat storage/logs/laravel.log
      - name: Dastardly Scan Action
        uses: PortSwigger/dastardly-github-action@v1.0.0
        continue-on-error: true                        # This allows subsequent steps to run even if this step fails
        with:
          target-url: 'http://localhost'
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
